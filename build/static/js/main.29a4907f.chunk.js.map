{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Person.js","components/Notification.js","components/Error.js","services/numbers.js","App.js","serviceWorker.js","index.js"],"names":["Filter","search","handleSearchChange","value","onChange","PersonForm","newName","newNumber","addNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","rows","Person","person","deletePerson","name","number","onClick","Notification","message","style","color","fontStyle","fontSize","background","padding","margin","Error","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","notification","setNotification","error","setError","nullNotification","nullError","useEffect","numberService","numbers","personsToShow","filter","RegExp","test","find","p","window","confirm","console","log","setTimeout","catch","event","target","preventDefault","some","alert","newPersonNumber","returnedPerson","map","personObject","concat","key","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29a4907f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ search, handleSearchChange }) => {\n    return (<table>\n        <tbody>\n            <tr>\n                <td>filter shown with</td>\n                <td><input value={search} onChange={handleSearchChange} /></td>\n            </tr>\n        </tbody>\n    </table >)\n}\n\nexport default Filter\n\n","import React from 'react'\n\nconst PersonForm = ({ newName, newNumber,addNumber, handleNameChange, handleNumberChange }) => {\n    return (\n        <form onSubmit={addNumber}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            name:\n              </td>\n                        <td>\n                            <input value={newName} onChange={handleNameChange} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            number:\n              </td>\n                        <td>\n                            <input value={newNumber} onChange={handleNumberChange} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <button type=\"submit\">add</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </form>\n\n    )\n}\n\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ rows }) => (\n    <table>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n  )\n\n  export default Persons","import React from 'react'\n\nconst Person = ({ person, deletePerson}) => (\n    <tr>\n      <td>\n        {person.name}\n      </td>\n      <td>\n        {person.number}\n      </td>\n      <td>\n        <button onClick={deletePerson}>delete</button>\n      </td>\n    </tr>\n  )\n\n  export default Person","import React from 'react'\n\nconst Notification =({message}) => {\n    const notificationStyle = {\n        color: 'White',\n        fontStyle: 'bold',\n        fontSize: 20,\n        background: 'black',\n        padding: 10,\n        margin: 10\n      }\n    \n\n\n    if (message === null) {\n        return null\n    }\n\n    return(\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Error =({message}) => {\n    const notificationStyle = {\n        color: 'White',\n        fontStyle: 'bold',\n        fontSize: 20,\n        background: 'Red',\n        padding: 10,\n        margin: 10\n      }\n    \n\n\n    if (message === null) {\n        return null\n    }\n\n    return(\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Error","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport numberService from './services/numbers'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [error, setError] = useState(null)\n\n  const nullNotification = () => setNotification(null)\n  const nullError = () => setError(null)\n\n  useEffect(() => {\n    numberService\n      .getAll()\n      .then(numbers => setPersons(numbers))\n  },\n    [])\n\n  const rows = () => personsToShow.map(person =>\n    <Person\n      key={person.name}\n      person={person}\n      deletePerson={() => deletePerson(person.id)}\n    />\n  )\n\n  const personsToShow = persons.filter(person => new RegExp(search, \"i\").test(person.name))\n\n  const addNumber = (event) => {\n    event.preventDefault()\n\n    if (persons.some(person => person.name === newName && person.number === newNumber)) {\n      alert(newName + ' is already added to the phonebook')\n    } else if (persons.some(person => person.name === newName)) {\n      const person = persons.find(p => p.name === newName)\n      const id = person.id\n      if (window.confirm(`${person.name} is already added to the phonebook, replace the old number with new one?`)) {\n        const newPersonNumber = { ...person, number: newNumber }\n        numberService\n          .update(person.id, newPersonNumber)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setNotification(`Changed number for ${person.name}`)\n            setTimeout(nullNotification, 5000)\n          }).catch(error => {\n            setError(error.response.data.error)\n            setTimeout(nullError, 5000)\n          }\n          )\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n      numberService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotification(`Added ${personObject.name}`)\n          setTimeout(nullNotification, 5000)\n        }).catch(error => {\n          setError(error.response.data.error)\n          setTimeout(nullError, 5000)\n        }\n        )\n\n    }\n  }\n\n  const deletePerson = id => {\n    const person = persons.find(p => p.id === id)\n\n    if (window.confirm(`Delete ${person.name}?`)) {\n      numberService\n        .remove(id)\n        .then(response => {\n          console.log(response)\n          setPersons(persons.filter(person => person.id !== id))\n          setNotification(`Deleted ${person.name}`)\n          setTimeout(nullNotification, 5000)\n        }).catch(error => {\n          setError(`Information for ${person.name} was not found on the server`)\n          setTimeout(nullError, 5000)\n          setPersons(persons.filter(person => person.id !== id))\n        }\n        )\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Error message={error} />\n      <Filter search={search} handleSearchChange={handleSearchChange} />\n      <h2>add a new</h2>\n      <PersonForm addNumber={addNumber} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons rows={rows()} />\n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}